Day2: implement opcodes:
    1 - ADD: [0] + [1] => [3]
    2 - MUL: [0] * [1] => [3]
    9 - FIN: finished

Day5: implement opcodes:
    3 - IN:  read input => [0]
    4 - OUT: [0] -> output
    5 - JIT: Jump if [0] == True
    6 - JIF: Jump if [0] == False
    7 - LT: ([1] < [2]) => [3]
    7 - EQ: ([1] == [2]) => [3]
  
  Support both indirect/position mode and immediate mode
  Command format:

         1002 
        ||| |
    -----|- ------------
    |    |------       |
    |    |     |       |
  arg3  arg2  arg1  opcode
  ----------------
   argument modes
    0: position/indirect mode
    1: immediate/value mode

  If an instruction modifies the PC (jump), use that result
  without incrementing

Day9: Add relative address mode
  Add opcode:
    9 - REL: increment relative base offset by parameter
  Add argument mode 2: relative mode - indirect address added to relative base
  Add memory after program at address 0
  support large number
